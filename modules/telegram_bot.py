import openai
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from config.settings import TELEGRAM_TOKEN, AI_API_KEY

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI API
openai.api_key = AI_API_KEY

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ—Å–µ–¥—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_sessions = {}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def menu(update: Update, context: CallbackContext) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    reply_keyboard = [
        ["üìã My complaints", "üë• Groups"],
        ["‚úçÔ∏è Raise complaint", "üë§ Profile"]
    ]
    await update.message.reply_text(
        "Choose from the menu:",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, resize_keyboard=True, one_time_keyboard=False
        )
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
def my_complaints(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∂–∞–ª–æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    update.message.reply_text("üìã Here you can see your complaints.")

def groups(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã."""
    update.message.reply_text("üë• Here you can see your groups.")

def raise_complaint(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É."""
    update.message.reply_text("‚úçÔ∏è Write a description of your complaint, and I will help you.")

def profile(update: Update, context: CallbackContext) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    update.message.reply_text("üë§ This is your profile. Here you can see your information.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
async def handle_menu_selection(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –º–µ–Ω—é."""
    text = update.message.text
    if text == "üìã My complaints":
        await update.message.reply_text("üìã Here you can see your complaints.")
    elif text == "üë• Groups":
        await update.message.reply_text("üë• Here you can see your groups.")
    elif text == "‚úçÔ∏è Raise complaint":
        await update.message.reply_text("‚úçÔ∏è Write a description of your complaint, and I will help you.")
    elif text == "üë§ Profile":
        await update.message.reply_text("üë§ This is your profile. Here you can see your information.")

async def start(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."""
    user_id = update.message.from_user.id
    user_sessions[user_id] = []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    await update.message.reply_text("Hey! I'm your #dogecomplaints assistant. Use the menu to navigate.")
    await menu(update, context)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

async def reset(update: Update, context: CallbackContext) -> None:
    """–°–±—Ä–æ—Å –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = update.message.from_user.id
    user_sessions[user_id] = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    await update.message.reply_text("Dialog reset. Start chatting again!")

def chat_with_openai(user_id: int, user_message: str) -> str:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ OpenAI –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏."""
    # –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_history = user_sessions.get(user_id, [])
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_history.append({"role": "user", "content": user_message})

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢—ã —É–º–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫."}
            ] + user_history,  # –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å
            max_tokens=1000,
            temperature=0.7,
        )
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏
        ai_response = response["choices"][0]["message"]["content"].strip()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
        user_history.append({"role": "assistant", "content": ai_response})
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
        user_sessions[user_id] = user_history
        
        return ai_response
    except Exception as e:
        return f"An error occurred while querying OpenAI: {e}"

async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = update.message.from_user.id
    user_message = update.message.text
    await update.message.reply_text("Processing request...")
    
    # –í—ã–∑–æ–≤ OpenAI API —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    ai_response = chat_with_openai(user_id, user_message)
    update.message.reply_text(ai_response)

def main():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("reset", reset))
    application.add_handler(CommandHandler("menu", menu))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu_selection))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
